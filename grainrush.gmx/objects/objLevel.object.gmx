<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init some vars, don't worry about these too much
map_step = 0

map_enemy = 0
map_delay = 0
map_path = 0
map_pathspeed = 0
map_amount = 0
map_divider = 1
map_amountmulti = 1
map_complete = false

spd_enemy = objMutate
spd_path = pthMove01
dontrun = false
if dontrun == false then alarm[0]=1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>objPause</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>room_width-32</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If it has cycled through the amount of repetitions, move on to the next
mapdata = mpd[map_step]

if string_char_at(mapdata, 1)=="+" then
{
    if map_step+1&lt;=map_size then
    {
        map_step+=1
    }
    call_delay = real(string_char_at(mapdata,2))
    alarm[0]=room_speed*call_delay
    exit
}
else call_delay = 1

//Get all the data from the array
map_enemy = real(string_char_at(mapdata,1))
map_delay = real(string_char_at(mapdata,2))
map_path = string_char_at(mapdata,3)
map_pathspeed = real(string_char_at(mapdata,4))
map_amountmulti = real(string_char_at(mapdata,10))
if map_amount == 0 then map_amount = real(string_char_at(mapdata,6))*map_amountmulti
map_divider = real(string_char_at(mapdata,8))

//Use the data to set the appropriate objects
switch(map_enemy)
{
case 0: spd_enemy = objMutate; break;
case 1: spd_enemy = objMutateShield; break;
case 2: spd_enemy = objShootDrone; break;
case 3: spd_enemy = objShootDroneShielded; break;
case 4: spd_enemy = objMutateIndShield; break;
case 5: spd_enemy = objMutateShieldIndShield; break;
}

switch(map_path)
{
case "1": spd_path = pthMove01; break;
case "2": spd_path = pthMove02; break;
case "3": spd_path = pthMove03; break;
case "4": spd_path = pthMove04; break;
case "5": spd_path = pthMove05; break;
case "6": spd_path = pthMove06; break;
case "7": spd_path = pthMove07; break;
case "8": spd_path = pthMove08; break;
case "9": spd_path = pthMove09; break;
case "A": spd_path = pthMove10; break;
case "B": spd_path = pthMove11; break;
case "C": spd_path = pthMove12; break;
case "D": spd_path = pthMove13; break;
case "E": spd_path = pthMove14; break;
case "F": spd_path = pthMove15; break;
case "G": spd_path = pthMove16; break;
case "H": spd_path = pthMove17; break;
case "I": spd_path = pthMove18; break;
}

//Make an enemy, copy the attributes from this script over to that object
map_spawned = instance_create(-32,-32,spd_enemy)
map_spawned.spd_path = spd_path
map_spawned.map_pathspeed = map_pathspeed

//Made one, subtract the amount of times
if map_amount&gt;0 then map_amount-=1

with (map_spawned)
{
    path_start(spd_path,map_pathspeed,0,true)
}

//Check if it can move on to the next one or if it has to repeat more
if map_amount == 0 then
{
    if map_step+1&lt;=map_size then
    {
        map_step+=1
        alarm[0]=room_speed*(map_delay/map_divider)
    }
}
else
alarm[0]=room_speed*(map_delay/map_divider)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if map_complete == false and
objPlayer.died == false and
map_step==map_size and 
instance_number(objMutate)==0 and 
instance_number(objMutateShield)==0 and 
instance_number(objShootDrone)==0 and 
instance_number(objShootDroneShielded)==0 and
instance_number(objMutateIndShield)==0 and
instance_number(objMutateShieldIndShield)==0 then
{
    ini_open("grush.ini")
    ini_write_real("Progress",string(map_id),1)
    ini_close()
    instance_create(room_width/2,room_height/2+48,objButtonComplete)
    map_complete = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_text(0,0,string(map_delay))
draw_text(0,32,string(map_step))
draw_text(0,48,string(map_amount))*/

if map_complete == true then
{
    draw_set_color(c_green)
    draw_set_alpha(0.3)
    draw_rectangle(0,0,room_width,room_height,false)
    draw_set_alpha(1)
    draw_set_color(c_gray)
    draw_set_font(fntButton)
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle)
    draw_text(room_width/2-1,room_height/2-1,global.levelcomplete)
    draw_set_color(c_white)
    draw_text(room_width/2,room_height/2,global.levelcomplete)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>map_step = map_size
with (objMutate) {instance_destroy()}
with (objMutateShield) {instance_destroy()}
with (objShootDrone) {instance_destroy()}
with (objShootDroneShielded) {instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
