<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>level = 0;

alarm[0] = 1;
alarm[1] = room_speed * 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn barrels

//Check how many barrels exist
if instance_number(obj_Explosive) &lt; 10
{
var xx, yy;
//Set sprite for place meeting checks
sprite_index = spr_Barrel;
//Set random coords
xx = 128 + random(room_width - 256);
yy = 128 + random(room_height - 256);
//Check random coords for collisions
while (place_meeting(xx, yy, obj_Col_Parent) || place_meeting(xx, yy, obj_Player))
    {
    //re-roll random coords
    xx = 128 + random(room_width - 256);
    yy = 128 + random(room_height - 256);
    }
//create barrel
instance_create(xx, yy, obj_Explosive);
//Create spawn effect
with (instance_create(xx, yy, obj_Explosion))
    {
    image_xscale = 0.5;
    image_yscale = 0.5;
    image_blend = c_red;
    }
//Play sound
audio_play_sound(snd_Barrel_Spawn, 0, false);
//reset sprite index
sprite_index = -1;
}

//restart alarm
alarm[1] = room_speed * 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create the enemy outside of the room
if instance_number(obj_Enemy) &lt; 3
{
repeat(1 + level)
    {
    instance_create(-16 - random(64), (room_height / 2) - 80 + random(160), obj_Enemy);
    instance_create(room_width + 64 + random(64), (room_height / 2) - 80 + random(160), obj_Enemy);
    instance_create((room_width / 2) - 64 + random(128), -16 - random(64), obj_Enemy);
    instance_create((room_height / 2) - 64 + random(128), room_height + 16 + random(64), obj_Enemy); 
    }
level += 1;
}

//Reset the alarm!
alarm[0] = room_speed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
